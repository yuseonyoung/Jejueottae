<?xml version="1.0" encoding="UTF-8"?>
<!-- 이 문서는 myBatis에서 처리할 SQL문을 작성하는 문서입니다. -->
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Reservation">

	<!-- 호텔정보 -->
	<select id="accomInfo" parameterType="String"
		resultType="kr.or.ddit.middle.vo.AccommodationVO">
		select * from accommodation where a_code = #{a_code}
	</select>

	<!-- 객실정보구하기 -->
	<select id="roomInfo" parameterType="String"
		resultType="kr.or.ddit.middle.vo.RoomVO">
		select * from room where r_code = #{r_code}
	</select>



	<!-- 결제 버튼 이벤트 ==> insert -->
	<insert id="resInsert" parameterType="kr.or.ddit.middle.vo.ReservationVO">
		<selectKey keyProperty="res_code" resultType="String" order="BEFORE">
			select 'RS23' || lpad(res_seq.nextval,6,'0') from dual
		</selectKey>
		insert into reservation
		(res_code, r_code, mem_id,res_cin, res_cout, res_memo, res_status)
		values(#{res_code},#{r_code},#{mem_id}, #{res_cin},
		#{res_cout}, #{res_memo}, #{res_status})
	</insert>
	
	<!-- 결제하기 -->
		<insert id="payInsert" parameterType="kr.or.ddit.middle.vo.PaymentVO">
			insert into payment(pay_no, res_code, pay_date, pay_price, pay_method, mil_use, cou_use)
			values('PY23'||lpad(pay_seq.nextval,6,'0'),#{res_code},sysdate, #{pay_price},#{pay_method},#{mil_use},#{cou_use})
		</insert>

	<!-- 환불하기 ==> refund에서 내역 insert -->
	<insert id="refundInsert" parameterType="String">
		insert into refund
		(rf_code, pay_no, rf_date)
		values('RF23' ||
		lpad(ref_seq.nextval,6,'0'),#{pay_no},sysdate)
	</insert>

	<!-- 환불하기 ==> 예약 상태 status 업데이트 refund -->
	<update id="resStatusUpdate" parameterType="String">
		update reservation
		set res_status = '예약취소' where res_code =#{res_code}
	</update>


	<!-- 보유쿠폰 불러오기 -->
	<select id="cphCheck" parameterType="String" resultType="String">
		select
		cp.co_code
		from member m , cp_having cp
		where m.mem_id = cp.mem_id and
		m.mem_id = #{mem_id} and cp.cp_use=1
	</select>

	<!-- 보유 마일리지 불러오기 -->
	<select id="memPosMileage" parameterType="String">
		select mem_mil
		from
		member
		where mem_id = #{mem_id}
	</select>

	<!-- 쿠폰 보유자 0으로 변경 -->
	<update id="memCpdelete"
		parameterType="kr.or.ddit.middle.vo.Cp_HavingVO">
		update cp_having
		set cp_use =0
		where cp_use = 1 and
		mem_id=#{mem_id} and co_code=#{co_code}
	</update>


	<select id="CheckInOutFilter"
		parameterType="kr.or.ddit.middle.vo.ReservationVO"
		resultType="kr.or.ddit.middle.vo.ReservationVO">
		SELECT a.a_code, r.r_code, r.r_inven, rv.res_cin,
		rv.res_cout, rv.res_code,
		rv.mem_id
		FROM accommodation a, room r,
		reservation rv
		WHERE a.a_code = r.a_code
		AND rv.r_code = r.r_code
		AND
		(rv.res_cin &lt;= TO_DATE(#{res_cout}, 'MM/DD') AND rv.res_cout &gt;=
		TO_DATE(#{res_cin}, 'MM/DD'))
		ORDER BY r.r_code
	</select>

	<select id="searchRoom" parameterType="kr.or.ddit.middle.vo.RoomVO"
		resultType="kr.or.ddit.middle.vo.RoomVO">
		SELECT a.a_code, r.r_code, a.a_type, r.r_inven
		from
		accommodation a, room r
		where r.a_code=#{a_code} and a.a_code= r.a_code
		and r.r_max &gt;= #{r_max}
		order by a.a_code asc	
	</select>

	<select id="invenCountRoom"
		parameterType="kr.or.ddit.middle.vo.RoomVO" resultType="int">
		SELECT COUNT(*) AS cnt
		FROM accommodation a, room r, reservation rv
		WHERE a.a_code = r.a_code
		AND rv.r_code = r.r_code
		AND a.a_type = #{a_type}
		and a.a_code = #{a_code}
		and r.r_code = #{r_code}
		AND (rv.res_cin &lt;= TO_DATE(#{res_cout}, 'MM/DD') AND rv.res_cout &gt;=
		TO_DATE(#{res_cin}, 'MM/DD'))
		order by a.a_code asc
	</select>
	
	<!-- 타입을 지정하지 않은 각각의 룸 예약 count -->
	<select id="invenCountRoomNType"
		parameterType="kr.or.ddit.middle.vo.RoomVO" resultType="int">
		SELECT COUNT(*) AS cnt
		FROM accommodation a, room r, reservation rv
		WHERE a.a_code = r.a_code
		AND rv.r_code = r.r_code
		and a.a_code = #{a_code}
		and r.r_code = #{r_code}
		AND (rv.res_cin &lt;= TO_DATE(#{res_cout}, 'MM/DD') AND rv.res_cout &gt;=
		TO_DATE(#{res_cin}, 'MM/DD'))
		order by a.a_code asc
	</select>
	
	<!-- 관리자 결제 목록 조회 -->
    <select id="adminPayCheck"  resultType="kr.or.ddit.middle.vo.PaymentVO">
		SELECT PAY_NO, RES_CODE, TO_CHAR(PAY_DATE, 'YY-MM-DD') as pay_date, PAY_PRICE, PAY_METHOD 
		FROM PAYMENT
	</select>
	
	<!-- 관리자 매출 조회 -->
	<select id="adminSalesCheck" resultType="kr.or.ddit.middle.vo.PaymentVO">
		SELECT TO_CHAR(PAY_DATE, 'YY-MM') AS pay_MONTH,	SUM(PAY_PRICE) AS pay_TOTAL_SALES
		FROM payment
		GROUP BY TO_CHAR(PAY_DATE, 'YY-MM')
		ORDER BY TO_DATE(TO_CHAR(PAY_DATE, 'YY-MM'), 'YY-MM')
	</select>

</mapper>